"""cleanup_unused_tables

Revision ID: 3ec0e267333e
Revises: 572d956d3bac
Create Date: 2025-06-09 20:02:41.188228

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3ec0e267333e'
down_revision: Union[str, None] = '572d956d3bac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file_uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('ship_id', sa.Integer(), nullable=True),
    sa.Column('upload_user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['ship_id'], ['ships.id'], ),
    sa.ForeignKeyConstraint(['upload_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_uploads_id'), 'file_uploads', ['id'], unique=False)
    op.create_table('cruise_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_upload_id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=100), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('ship_code', sa.String(length=50), nullable=True),
    sa.Column('ship_name', sa.String(length=100), nullable=True),
    sa.Column('loading_date', sa.DateTime(), nullable=True),
    sa.Column('supplier_name', sa.String(length=200), nullable=True),
    sa.Column('supplier_code', sa.String(length=100), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('order_type', sa.String(length=10), nullable=True),
    sa.Column('destination', sa.String(length=200), nullable=True),
    sa.Column('port_code', sa.String(length=10), nullable=True),
    sa.Column('raw_header_data', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('is_selected', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['file_upload_id'], ['file_uploads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cruise_orders_id'), 'cruise_orders', ['id'], unique=False)
    op.create_table('cruise_order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cruise_order_id', sa.Integer(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('product_code', sa.String(length=100), nullable=True),
    sa.Column('product_name', sa.String(length=500), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_price', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('raw_detail_data', sa.JSON(), nullable=True),
    sa.Column('match_status', sa.String(length=20), nullable=True),
    sa.Column('match_confidence', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cruise_order_id'], ['cruise_orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cruise_order_items_id'), 'cruise_order_items', ['id'], unique=False)
    op.drop_index('ix_order_assignments_id', table_name='order_assignments')
    op.drop_table('order_assignments')
    op.drop_index('ix_order_analyses_id', table_name='order_analyses')
    op.drop_table('order_analyses')
    op.drop_index('ix_product_history_id', table_name='product_history')
    op.drop_table('product_history')
    op.drop_index('ix_deliveries_id', table_name='deliveries')
    op.drop_table('deliveries')
    op.drop_index('ix_order_uploads_id', table_name='order_uploads')
    op.drop_table('order_uploads')
    op.drop_index('ix_supplier_product_pricing_id', table_name='supplier_product_pricing')
    op.drop_table('supplier_product_pricing')
    op.drop_index('ix_upload_order_items_id', table_name='upload_order_items')
    op.drop_table('upload_order_items')
    op.drop_index('ix_upload_orders_id', table_name='upload_orders')
    op.drop_table('upload_orders')
    op.drop_index('ix_order_analysis_items_id', table_name='order_analysis_items')
    op.drop_table('order_analysis_items')
    op.drop_index('ix_inventories_id', table_name='inventories')
    op.drop_table('inventories')
    op.drop_index('ix_order_processing_items_id', table_name='order_processing_items')
    op.drop_table('order_processing_items')
    op.drop_index('ix_notification_history_id', table_name='notification_history')
    op.drop_table('notification_history')
    op.drop_constraint('products_supplier_id_fkey', 'products', type_='foreignkey')
    op.drop_constraint('products_port_id_fkey', 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'suppliers', ['supplier_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'products', 'ports', ['port_id'], ['id'], ondelete='SET NULL')
    op.create_unique_constraint('uq_supplier_category', 'supplier_categories', ['supplier_id', 'category_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_supplier_category', 'supplier_categories', type_='unique')
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.create_foreign_key('products_port_id_fkey', 'products', 'ports', ['port_id'], ['id'])
    op.create_foreign_key('products_supplier_id_fkey', 'products', 'suppliers', ['supplier_id'], ['id'])
    op.create_table('notification_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='notification_history_category_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name='notification_history_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notification_history_pkey')
    )
    op.create_index('ix_notification_history_id', 'notification_history', ['id'], unique=False)
    op.create_table('order_processing_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_no', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ship_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('product_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('supplier_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('added_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('processed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_items.id'], name='order_processing_items_order_item_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='order_processing_items_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_processing_items_pkey')
    )
    op.create_index('ix_order_processing_items_id', 'order_processing_items', ['id'], unique=False)
    op.create_table('inventories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='inventories_product_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name='inventories_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventories_pkey')
    )
    op.create_index('ix_inventories_id', 'inventories', ['id'], unique=False)
    op.create_table('order_analysis_items',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('order_analysis_items_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('analysis_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('matched_product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['order_analyses.id'], name='order_analysis_items_analysis_id_fkey'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='order_analysis_items_category_id_fkey'),
    sa.ForeignKeyConstraint(['matched_product_id'], ['products.id'], name='order_analysis_items_matched_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_analysis_items_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_order_analysis_items_id', 'order_analysis_items', ['id'], unique=False)
    op.create_table('upload_orders',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('upload_orders_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('upload_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_no', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('ship_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('delivery_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('supplier_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['upload_id'], ['order_uploads.id'], name='upload_orders_upload_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='upload_orders_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_upload_orders_id', 'upload_orders', ['id'], unique=False)
    op.create_table('upload_order_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['upload_orders.id'], name='upload_order_items_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='upload_order_items_pkey')
    )
    op.create_index('ix_upload_order_items_id', 'upload_order_items', ['id'], unique=False)
    op.create_table('supplier_product_pricing',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('effective_from', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('effective_to', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='supplier_product_pricing_product_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name='supplier_product_pricing_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='supplier_product_pricing_pkey'),
    sa.UniqueConstraint('supplier_id', 'product_id', 'effective_from', name='uix_supplier_product_pricing')
    )
    op.create_index('ix_supplier_product_pricing_id', 'supplier_product_pricing', ['id'], unique=False)
    op.create_table('order_uploads',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('order_uploads_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ship_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('upload_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name='order_uploads_country_id_fkey'),
    sa.ForeignKeyConstraint(['ship_id'], ['ships.id'], name='order_uploads_ship_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_uploads_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_order_uploads_id', 'order_uploads', ['id'], unique=False)
    op.create_table('deliveries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delivery_no', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('delivery_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='deliveries_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='deliveries_pkey'),
    sa.UniqueConstraint('delivery_no', name='deliveries_delivery_no_key')
    )
    op.create_index('ix_deliveries_id', 'deliveries', ['id'], unique=False)
    op.create_table('product_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_name_en', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('product_name_jp', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('unit_size', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('pack_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('country_of_origin', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('brand', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('effective_from', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('effective_to', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('history_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='product_history_category_id_fkey'),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name='product_history_country_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_history_product_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name='product_history_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_history_pkey')
    )
    op.create_index('ix_product_history_id', 'product_history', ['id'], unique=False)
    op.create_table('order_analyses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('order_analyses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('upload_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_no', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('ship_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('order_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('delivery_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('supplier_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['upload_id'], ['order_uploads.id'], name='order_analyses_upload_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_analyses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_order_analyses_id', 'order_analyses', ['id'], unique=False)
    op.create_table('order_assignments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('analysis_item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('total_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('notification_sent', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('notification_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_item_id'], ['order_analysis_items.id'], name='order_assignments_analysis_item_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name='order_assignments_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_assignments_pkey')
    )
    op.create_index('ix_order_assignments_id', 'order_assignments', ['id'], unique=False)
    op.drop_index(op.f('ix_cruise_order_items_id'), table_name='cruise_order_items')
    op.drop_table('cruise_order_items')
    op.drop_index(op.f('ix_cruise_orders_id'), table_name='cruise_orders')
    op.drop_table('cruise_orders')
    op.drop_index(op.f('ix_file_uploads_id'), table_name='file_uploads')
    op.drop_table('file_uploads')
    # ### end Alembic commands ###
